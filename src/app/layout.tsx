import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  // Set html.dark before React hydration to avoid FOUC and mismatches
  const themeScript = `(()=>{try{const raw=localStorage.getItem('ez_settings');const s=raw?JSON.parse(raw):null;const pref=window.matchMedia&&window.matchMedia('(prefers-color-scheme: dark)').matches;const t=(s&&s.theme)||'system';const dark=t==='dark'||(t==='system'&&pref);const root=document.documentElement;root.classList.toggle('dark',dark);root.setAttribute('data-theme',dark?'dark':'light');}catch(e){}})();`;
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <script dangerouslySetInnerHTML={{ __html: themeScript }} />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}
